{"ast":null,"code":"var _jsxFileName = \"/Users/suriyakumar/Documents/Brain_Games/BGCScience/Fluency_test/transcription_editor/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.esm.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://audio-transcription-editor-13c6d97d2e6b.herokuapp.com\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState(null);\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlaying] = useState(false);\n  const [editableWords, setEditableWords] = useState([]);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [timeRange, setTimeRange] = useState({\n    start: 0,\n    end: 0\n  });\n  const [duration, setDuration] = useState(0);\n  const [showQCWord, setShowQCWord] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const regionRef = useRef(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!file) {\n      alert(\"Please upload a file!\");\n      return;\n    }\n    setIsLoading(true);\n    setLoadingMessage(\"Transcribing audio...\");\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setTranscription(data);\n      setLoadingMessage(\"Audio transcribed successfully!\");\n      setTimeout(() => setIsLoading(false), 1000);\n      initializeWaveform(URL.createObjectURL(file));\n    } catch (error) {\n      alert(\"Error uploading file\");\n      setIsLoading(false);\n    }\n  };\n  const initializeWaveform = audioUrl => {\n    if (wavesurfer.current) {\n      wavesurfer.current.destroy();\n    }\n    wavesurfer.current = WaveSurfer.create({\n      container: waveformRef.current,\n      waveColor: \"#4a4a4a\",\n      progressColor: \"#2196F3\",\n      cursorColor: \"red\",\n      backend: \"WebAudio\",\n      height: 100,\n      plugins: [RegionsPlugin.create()],\n      interact: false\n    });\n    const wsRegions = wavesurfer.current.registerPlugin(RegionsPlugin.create());\n    wavesurfer.current.load(audioUrl);\n    wavesurfer.current.on(\"ready\", () => {\n      const duration = wavesurfer.current.getDuration();\n      setDuration(duration);\n      setTimeRange({\n        start: 0,\n        end: duration\n      });\n\n      // Create initial region with proper configuration\n      const region = wsRegions.addRegion({\n        start: 0,\n        end: duration,\n        content: \"Selected Region\",\n        color: \"rgba(255, 0, 0, 0.1)\",\n        drag: true,\n        resize: true,\n        minLength: 0.1,\n        handleStyle: {\n          left: {\n            backgroundColor: \"red\",\n            width: \"8px\"\n          },\n          right: {\n            backgroundColor: \"red\",\n            width: \"8px\"\n          }\n        }\n      });\n      regionRef.current = region;\n\n      // Update time range when region changes\n      region.on(\"update-end\", () => {\n        setTimeRange({\n          start: region.start,\n          end: region.end\n        });\n      });\n\n      // Handle region clicks using the regions plugin\n      wsRegions.on(\"region-clicked\", (region, e) => {\n        e.stopPropagation();\n        if (playing) {\n          region.pause();\n          setPlaying(false);\n        } else {\n          region.play();\n          setPlaying(true);\n        }\n      });\n\n      // Handle playback completion\n      wavesurfer.current.on(\"finish\", () => setPlaying(false));\n    });\n  };\n  useEffect(() => {\n    if (transcription) {\n      const filtered = transcription.words.filter(word =>\n      // Check if word overlaps with selected region\n      word.start_time / 1000 < timeRange.end && word.end_time / 1000 > timeRange.start);\n      setEditableWords(filtered);\n    }\n  }, [timeRange, transcription]);\n\n  // Update togglePlay function\n  const togglePlay = () => {\n    if (!wavesurfer.current || !regionRef.current) return;\n    if (playing) {\n      wavesurfer.current.pause();\n      setPlaying(false);\n    } else {\n      regionRef.current.play();\n      setPlaying(true);\n    }\n  };\n  const openEditModal = word => {\n    setCurrentWord(word);\n    setShowEditModal(true);\n  };\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedWord = {\n      ...currentWord,\n      word: formData.get(\"word\"),\n      start_time: Math.round(parseFloat(formData.get(\"start\")) * 1000),\n      end_time: Math.round(parseFloat(formData.get(\"end\")) * 1000),\n      edited: true\n    };\n    const index = transcription.words.findIndex(w => w === currentWord);\n    let updatedWords = [...transcription.words];\n    updatedWords[index] = updatedWord;\n    setTranscription({\n      ...transcription,\n      words: updatedWords\n    });\n    setShowEditModal(false);\n  };\n  const saveEdits = async () => {\n    await fetch(`${API_URL}/update-json/${file.name}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transcription)\n    });\n    alert(\"Edits Saved!\");\n  };\n  const downloadJSON = async () => {\n    try {\n      const response = await fetch(`${API_URL}/download/${file.name}`);\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${file.name}_transcription.json`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      alert(\"Error downloading JSON\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"BKB Transcription Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          onChange: handleFileChange,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          className: \"custom-file-upload\",\n          children: \"\\uD83D\\uDCC1 Choose File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"file-name\",\n          children: file ? file.name : \"No file selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadFile,\n        children: \"Upload & Transcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: waveformRef,\n      className: \"waveform-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Region Start (ms):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"1\",\n          name: \"start\",\n          value: Math.round(timeRange.start * 1000),\n          readOnly: true,\n          min: \"0\",\n          max: Math.round(duration * 1000)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Region End (ms):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"1\",\n          name: \"end\",\n          value: Math.round(timeRange.end * 1000),\n          readOnly: true,\n          min: \"0\",\n          max: Math.round(duration * 1000)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          children: playing ? \"⏸ Pause\" : \"▶ Play Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcription-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveEdits,\n          className: \"save-button\",\n          children: \"\\uD83D\\uDCBE Save All Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadJSON,\n          className: \"download-button\",\n          children: \"\\u2B07 Download JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"words-list\",\n        children: transcription.words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `word ${editableWords.includes(word) ? \"editable\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word-text\",\n            children: [word.word, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamps\",\n              children: [\"(\", word.start_time, \"ms - \", word.end_time, \"ms)\", word.edited && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edited-badge\",\n                children: \" (Edited)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `qc-status ${word.qc ? 'pass' : 'fail'}`,\n              onClick: () => setShowQCWord(word.qc_word),\n              onMouseEnter: e => e.target.style.color = 'blue',\n              onMouseLeave: e => e.target.style.color = '',\n              children: [\"QC: \", word.qc ? \"✔ Pass\" : \"❌ Fail\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this), editableWords.includes(word) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openEditModal(word),\n            className: \"edit-button\",\n            children: \"\\u270F Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this), showQCWord && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"QC Transcribed Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: showQCWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowQCWord(null),\n            className: \"cancel-button\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Word:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"word\",\n                defaultValue: currentWord.word,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start (seconds):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"start\",\n                type: \"number\",\n                step: \"0.001\",\n                defaultValue: currentWord.start_time / 1000,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End (seconds):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"end\",\n                type: \"number\",\n                step: \"0.001\",\n                defaultValue: currentWord.end_time / 1000,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"save-button\",\n                children: \"\\uD83D\\uDCBE Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowEditModal(false),\n                className: \"cancel-button\",\n                children: \"\\u2716 Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RHCUftKa8SOIsCqnlnM8eqxKKxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WaveSurfer","RegionsPlugin","jsxDEV","_jsxDEV","API_URL","App","_s","file","setFile","transcription","setTranscription","waveformRef","wavesurfer","playing","setPlaying","editableWords","setEditableWords","showEditModal","setShowEditModal","currentWord","setCurrentWord","timeRange","setTimeRange","start","end","duration","setDuration","showQCWord","setShowQCWord","loadingMessage","setLoadingMessage","isLoading","setIsLoading","regionRef","handleFileChange","e","target","files","uploadFile","alert","formData","FormData","append","response","fetch","method","body","data","json","setTimeout","initializeWaveform","URL","createObjectURL","error","audioUrl","current","destroy","create","container","waveColor","progressColor","cursorColor","backend","height","plugins","interact","wsRegions","registerPlugin","load","on","getDuration","region","addRegion","content","color","drag","resize","minLength","handleStyle","left","backgroundColor","width","right","stopPropagation","pause","play","filtered","words","filter","word","start_time","end_time","togglePlay","openEditModal","handleEditSubmit","preventDefault","updatedWord","get","Math","round","parseFloat","edited","index","findIndex","w","updatedWords","saveEdits","name","headers","JSON","stringify","downloadJSON","blob","url","window","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","onClick","ref","step","value","readOnly","min","max","map","includes","qc","qc_word","onMouseEnter","style","onMouseLeave","onSubmit","defaultValue","required","_c","$RefreshReg$"],"sources":["/Users/suriyakumar/Documents/Brain_Games/BGCScience/Fluency_test/transcription_editor/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.esm.js\";\nimport \"./App.css\";\n\nconst API_URL = \"https://audio-transcription-editor-13c6d97d2e6b.herokuapp.com\";\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [transcription, setTranscription] = useState(null);\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlaying] = useState(false);\n    const [editableWords, setEditableWords] = useState([]);\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [currentWord, setCurrentWord] = useState(null);\n    const [timeRange, setTimeRange] = useState({ start: 0, end: 0 });\n    const [duration, setDuration] = useState(0);\n    const [showQCWord, setShowQCWord] = useState(null);\n    const [loadingMessage, setLoadingMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const regionRef = useRef(null);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const uploadFile = async () => {\n        if (!file){\n            alert(\"Please upload a file!\");\n            return\n        }\n        setIsLoading(true);\n        setLoadingMessage(\"Transcribing audio...\");\n        \n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            const response = await fetch(`${API_URL}/upload`, {\n                method: \"POST\",\n                body: formData,\n            });\n            \n            const data = await response.json();\n            setTranscription(data);\n            \n            setLoadingMessage(\"Audio transcribed successfully!\");\n            setTimeout(() => setIsLoading(false), 1000);\n            \n            initializeWaveform(URL.createObjectURL(file));\n        } catch (error) {\n            alert(\"Error uploading file\");\n            setIsLoading(false);\n        }\n    };\n\n    const initializeWaveform = (audioUrl) => {\n        if (wavesurfer.current) {\n          wavesurfer.current.destroy();\n        }\n      \n        wavesurfer.current = WaveSurfer.create({\n          container: waveformRef.current,\n          waveColor: \"#4a4a4a\",\n          progressColor: \"#2196F3\",\n          cursorColor: \"red\",\n          backend: \"WebAudio\",\n          height: 100,\n          plugins: [RegionsPlugin.create()],\n          interact: false,\n        });\n      \n        const wsRegions = wavesurfer.current.registerPlugin(RegionsPlugin.create());\n      \n        wavesurfer.current.load(audioUrl);\n      \n        wavesurfer.current.on(\"ready\", () => {\n          const duration = wavesurfer.current.getDuration();\n          setDuration(duration);\n          setTimeRange({ start: 0, end: duration });\n      \n          // Create initial region with proper configuration\n          const region = wsRegions.addRegion({\n            start: 0,\n            end: duration,\n            content: \"Selected Region\",\n            color: \"rgba(255, 0, 0, 0.1)\",\n            drag: true,\n            resize: true,\n            minLength: 0.1,\n            handleStyle: {\n              left: { backgroundColor: \"red\", width: \"8px\" },\n              right: { backgroundColor: \"red\", width: \"8px\" },\n            },\n          });\n      \n          regionRef.current = region;\n      \n          // Update time range when region changes\n          region.on(\"update-end\", () => {\n            setTimeRange({\n              start: region.start,\n              end: region.end,\n            });\n          });\n      \n          // Handle region clicks using the regions plugin\n          wsRegions.on(\"region-clicked\", (region, e) => {\n            e.stopPropagation();\n            if (playing) {\n              region.pause();\n              setPlaying(false);\n            } else {\n              region.play();\n              setPlaying(true);\n            }\n          });\n      \n          // Handle playback completion\n          wavesurfer.current.on(\"finish\", () => setPlaying(false));\n        });\n      };\n      \n\n\n\n\n    useEffect(() => {\n        if (transcription) {\n            const filtered = transcription.words.filter(\n                (word) =>\n                    // Check if word overlaps with selected region\n                    (word.start_time / 1000 < timeRange.end) && \n                    (word.end_time / 1000 > timeRange.start)\n            );\n            setEditableWords(filtered);\n        }\n    }, [timeRange, transcription]);\n\n      // Update togglePlay function\n      const togglePlay = () => {\n        if (!wavesurfer.current || !regionRef.current) return;\n      \n        if (playing) {\n          wavesurfer.current.pause();\n          setPlaying(false);\n        } else {\n          regionRef.current.play();\n          setPlaying(true);\n        }\n      };\n\n    const openEditModal = (word) => {\n        setCurrentWord(word);\n        setShowEditModal(true);\n    };\n\n    const handleEditSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n\n        const updatedWord = {\n            ...currentWord,\n            word: formData.get(\"word\"),\n            start_time: Math.round(parseFloat(formData.get(\"start\")) * 1000),\n            end_time: Math.round(parseFloat(formData.get(\"end\")) * 1000),\n            edited: true,\n        };\n\n        const index = transcription.words.findIndex((w) => w === currentWord);\n        let updatedWords = [...transcription.words];\n        updatedWords[index] = updatedWord;\n        setTranscription({ ...transcription, words: updatedWords });\n\n        setShowEditModal(false);\n    };\n\n    const saveEdits = async () => {\n        await fetch(`${API_URL}/update-json/${file.name}`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(transcription),\n        });\n        alert(\"Edits Saved!\");\n    };\n\n    const downloadJSON = async () => {\n        try {\n            const response = await fetch(`${API_URL}/download/${file.name}`);\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = `${file.name}_transcription.json`;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n        } catch (error) {\n            alert(\"Error downloading JSON\");\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h2>BKB Transcription Editor</h2>\n            <div className=\"controls\">\n                <div className=\"file-input-container\">\n                    <input \n                    type=\"file\" \n                    id=\"fileInput\" \n                    onChange={handleFileChange} \n                    className=\"file-input\"\n                    />\n                    <label htmlFor=\"fileInput\" className=\"custom-file-upload\">\n                    📁 Choose File\n                    </label>\n                    <span className=\"file-name\">\n                    {file ? file.name : \"No file selected\"}\n                    </span>\n                </div>\n                <button onClick={uploadFile}>Upload & Transcribe</button>\n                </div>\n            {isLoading && (\n                <div className=\"loading-overlay\">\n                    <div className=\"loading-spinner\"></div>\n                    <p>{loadingMessage}</p>\n                </div>\n                )}\n            <div ref={waveformRef} className=\"waveform-container\"></div>\n\n            {transcription && (\n                <div className=\"time-controls\">\n                    <div className=\"slider-container\">\n                        <label>Region Start (ms):</label>\n                        <input\n                            type=\"number\"\n                            step=\"1\"\n                            name=\"start\"\n                            value={Math.round(timeRange.start * 1000)}\n                            readOnly\n                            min=\"0\"\n                            max={Math.round(duration * 1000)}\n                        />\n                        <label>Region End (ms):</label>\n                        <input\n                            type=\"number\"\n                            step=\"1\"\n                            name=\"end\"\n                            value={Math.round(timeRange.end * 1000)}\n                            readOnly\n                            min=\"0\"\n                            max={Math.round(duration * 1000)}\n                        />\n                        <button onClick={togglePlay}>\n                            {playing ? \"⏸ Pause\" : \"▶ Play Selection\"}\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {transcription && (\n                <div className=\"transcription-container\">\n                    <div className=\"toolbar\">\n                        <button onClick={saveEdits} className=\"save-button\">\n                            💾 Save All Changes\n                        </button>\n                        <button onClick={downloadJSON} className=\"download-button\">\n                            ⬇ Download JSON\n                        </button>\n                    </div>\n\n                    <div className=\"words-list\">\n                        {transcription.words.map((word, index) => (\n                            <div\n                                key={index}\n                                className={`word ${\n                                    editableWords.includes(word) ? \"editable\" : \"\"\n                                }`}\n                            >\n                                <span className=\"word-text\">\n                                    {word.word}\n                                    <span className=\"timestamps\">\n                                        ({word.start_time}ms - {word.end_time}ms)\n                                        {word.edited && (\n                                            <span className=\"edited-badge\"> (Edited)</span>\n                                        )}\n                                    </span>\n                                    <span \n                                    className={`qc-status ${word.qc ? 'pass' : 'fail'}`}\n                                    onClick={() => setShowQCWord(word.qc_word)}\n                                    onMouseEnter={(e) => e.target.style.color = 'blue'}\n                                    onMouseLeave={(e) => e.target.style.color = ''}\n                                >\n                                    QC: {word.qc ? \"✔ Pass\" : \"❌ Fail\"}\n                                </span>\n                                </span>\n\n                                {editableWords.includes(word) && (\n                                    <button\n                                        onClick={() => openEditModal(word)}\n                                        className=\"edit-button\"\n                                    >\n                                        ✏ Edit\n                                    </button>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                    {showQCWord && (\n                <div className=\"modal-backdrop\">\n                    <div className=\"modal\">\n                        <h3>QC Transcribed Word</h3>\n                        <p>{showQCWord}</p>\n                        <button onClick={() => setShowQCWord(null)} className=\"cancel-button\">\n                            Close\n                        </button>\n                    </div>\n                </div>\n            )}\n                    {showEditModal && (\n                        <div className=\"modal-backdrop\">\n                            <div className=\"modal\">\n                                <h3>Edit Word</h3>\n                                <form onSubmit={handleEditSubmit}>\n                                    <div className=\"form-group\">\n                                        <label>Word:</label>\n                                        <input\n                                            name=\"word\"\n                                            defaultValue={currentWord.word}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Start (seconds):</label>\n                                        <input\n                                            name=\"start\"\n                                            type=\"number\"\n                                            step=\"0.001\"\n                                            defaultValue={currentWord.start_time / 1000}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>End (seconds):</label>\n                                        <input\n                                            name=\"end\"\n                                            type=\"number\"\n                                            step=\"0.001\"\n                                            defaultValue={currentWord.end_time / 1000}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"modal-actions\">\n                                        <button type=\"submit\" className=\"save-button\">\n                                            💾 Save\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => setShowEditModal(false)}\n                                            className=\"cancel-button\"\n                                        >\n                                            ✖ Cancel\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,aAAa,MAAM,2CAA2C;AACrE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,OAAO,GAAG,+DAA+D;AAE/E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMc,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMa,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC;EAChE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMoC,SAAS,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMmC,gBAAgB,GAAIC,CAAC,IAAK;IAC5B3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAC/B,IAAI,EAAC;MACNgC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IACAP,YAAY,CAAC,IAAI,CAAC;IAClBF,iBAAiB,CAAC,uBAAuB,CAAC;IAE1C,IAAI;MACA,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEnC,IAAI,CAAC;MAE7B,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,SAAS,EAAE;QAC9CyC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCtC,gBAAgB,CAACqC,IAAI,CAAC;MAEtBjB,iBAAiB,CAAC,iCAAiC,CAAC;MACpDmB,UAAU,CAAC,MAAMjB,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAE3CkB,kBAAkB,CAACC,GAAG,CAACC,eAAe,CAAC7C,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACZd,KAAK,CAAC,sBAAsB,CAAC;MAC7BP,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,MAAMkB,kBAAkB,GAAII,QAAQ,IAAK;IACrC,IAAI1C,UAAU,CAAC2C,OAAO,EAAE;MACtB3C,UAAU,CAAC2C,OAAO,CAACC,OAAO,CAAC,CAAC;IAC9B;IAEA5C,UAAU,CAAC2C,OAAO,GAAGvD,UAAU,CAACyD,MAAM,CAAC;MACrCC,SAAS,EAAE/C,WAAW,CAAC4C,OAAO;MAC9BI,SAAS,EAAE,SAAS;MACpBC,aAAa,EAAE,SAAS;MACxBC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,UAAU;MACnBC,MAAM,EAAE,GAAG;MACXC,OAAO,EAAE,CAAC/D,aAAa,CAACwD,MAAM,CAAC,CAAC,CAAC;MACjCQ,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGtD,UAAU,CAAC2C,OAAO,CAACY,cAAc,CAAClE,aAAa,CAACwD,MAAM,CAAC,CAAC,CAAC;IAE3E7C,UAAU,CAAC2C,OAAO,CAACa,IAAI,CAACd,QAAQ,CAAC;IAEjC1C,UAAU,CAAC2C,OAAO,CAACc,EAAE,CAAC,OAAO,EAAE,MAAM;MACnC,MAAM5C,QAAQ,GAAGb,UAAU,CAAC2C,OAAO,CAACe,WAAW,CAAC,CAAC;MACjD5C,WAAW,CAACD,QAAQ,CAAC;MACrBH,YAAY,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAEC;MAAS,CAAC,CAAC;;MAEzC;MACA,MAAM8C,MAAM,GAAGL,SAAS,CAACM,SAAS,CAAC;QACjCjD,KAAK,EAAE,CAAC;QACRC,GAAG,EAAEC,QAAQ;QACbgD,OAAO,EAAE,iBAAiB;QAC1BC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,GAAG;QACdC,WAAW,EAAE;UACXC,IAAI,EAAE;YAAEC,eAAe,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM,CAAC;UAC9CC,KAAK,EAAE;YAAEF,eAAe,EAAE,KAAK;YAAEC,KAAK,EAAE;UAAM;QAChD;MACF,CAAC,CAAC;MAEFhD,SAAS,CAACsB,OAAO,GAAGgB,MAAM;;MAE1B;MACAA,MAAM,CAACF,EAAE,CAAC,YAAY,EAAE,MAAM;QAC5B/C,YAAY,CAAC;UACXC,KAAK,EAAEgD,MAAM,CAAChD,KAAK;UACnBC,GAAG,EAAE+C,MAAM,CAAC/C;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA0C,SAAS,CAACG,EAAE,CAAC,gBAAgB,EAAE,CAACE,MAAM,EAAEpC,CAAC,KAAK;QAC5CA,CAAC,CAACgD,eAAe,CAAC,CAAC;QACnB,IAAItE,OAAO,EAAE;UACX0D,MAAM,CAACa,KAAK,CAAC,CAAC;UACdtE,UAAU,CAAC,KAAK,CAAC;QACnB,CAAC,MAAM;UACLyD,MAAM,CAACc,IAAI,CAAC,CAAC;UACbvE,UAAU,CAAC,IAAI,CAAC;QAClB;MACF,CAAC,CAAC;;MAEF;MACAF,UAAU,CAAC2C,OAAO,CAACc,EAAE,CAAC,QAAQ,EAAE,MAAMvD,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC;EAMHhB,SAAS,CAAC,MAAM;IACZ,IAAIW,aAAa,EAAE;MACf,MAAM6E,QAAQ,GAAG7E,aAAa,CAAC8E,KAAK,CAACC,MAAM,CACtCC,IAAI;MACD;MACCA,IAAI,CAACC,UAAU,GAAG,IAAI,GAAGrE,SAAS,CAACG,GAAG,IACtCiE,IAAI,CAACE,QAAQ,GAAG,IAAI,GAAGtE,SAAS,CAACE,KAC1C,CAAC;MACDP,gBAAgB,CAACsE,QAAQ,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACjE,SAAS,EAAEZ,aAAa,CAAC,CAAC;;EAE5B;EACA,MAAMmF,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAAChF,UAAU,CAAC2C,OAAO,IAAI,CAACtB,SAAS,CAACsB,OAAO,EAAE;IAE/C,IAAI1C,OAAO,EAAE;MACXD,UAAU,CAAC2C,OAAO,CAAC6B,KAAK,CAAC,CAAC;MAC1BtE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLmB,SAAS,CAACsB,OAAO,CAAC8B,IAAI,CAAC,CAAC;MACxBvE,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAEH,MAAM+E,aAAa,GAAIJ,IAAI,IAAK;IAC5BrE,cAAc,CAACqE,IAAI,CAAC;IACpBvE,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM4E,gBAAgB,GAAI3D,CAAC,IAAK;IAC5BA,CAAC,CAAC4D,cAAc,CAAC,CAAC;IAClB,MAAMvD,QAAQ,GAAG,IAAIC,QAAQ,CAACN,CAAC,CAACC,MAAM,CAAC;IAEvC,MAAM4D,WAAW,GAAG;MAChB,GAAG7E,WAAW;MACdsE,IAAI,EAAEjD,QAAQ,CAACyD,GAAG,CAAC,MAAM,CAAC;MAC1BP,UAAU,EAAEQ,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC5D,QAAQ,CAACyD,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;MAChEN,QAAQ,EAAEO,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC5D,QAAQ,CAACyD,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;MAC5DI,MAAM,EAAE;IACZ,CAAC;IAED,MAAMC,KAAK,GAAG7F,aAAa,CAAC8E,KAAK,CAACgB,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAKrF,WAAW,CAAC;IACrE,IAAIsF,YAAY,GAAG,CAAC,GAAGhG,aAAa,CAAC8E,KAAK,CAAC;IAC3CkB,YAAY,CAACH,KAAK,CAAC,GAAGN,WAAW;IACjCtF,gBAAgB,CAAC;MAAE,GAAGD,aAAa;MAAE8E,KAAK,EAAEkB;IAAa,CAAC,CAAC;IAE3DvF,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMwF,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM9D,KAAK,CAAC,GAAGxC,OAAO,gBAAgBG,IAAI,CAACoG,IAAI,EAAE,EAAE;MAC/C9D,MAAM,EAAE,MAAM;MACd+D,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/C9D,IAAI,EAAE+D,IAAI,CAACC,SAAS,CAACrG,aAAa;IACtC,CAAC,CAAC;IACF8B,KAAK,CAAC,cAAc,CAAC;EACzB,CAAC;EAED,MAAMwE,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMpE,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGxC,OAAO,aAAaG,IAAI,CAACoG,IAAI,EAAE,CAAC;MAChE,MAAMK,IAAI,GAAG,MAAMrE,QAAQ,CAACqE,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,MAAM,CAAC/D,GAAG,CAACC,eAAe,CAAC4D,IAAI,CAAC;MAC5C,MAAMG,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGL,GAAG;MACZE,CAAC,CAACI,QAAQ,GAAG,GAAGhH,IAAI,CAACoG,IAAI,qBAAqB;MAC9CS,QAAQ,CAACtE,IAAI,CAAC0E,WAAW,CAACL,CAAC,CAAC;MAC5BA,CAAC,CAACM,KAAK,CAAC,CAAC;MACTP,MAAM,CAAC/D,GAAG,CAACuE,eAAe,CAACT,GAAG,CAAC;MAC/BG,QAAQ,CAACtE,IAAI,CAAC6E,WAAW,CAACR,CAAC,CAAC;IAChC,CAAC,CAAC,OAAO9D,KAAK,EAAE;MACZd,KAAK,CAAC,wBAAwB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIpC,OAAA;IAAKyH,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB1H,OAAA;MAAA0H,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC9H,OAAA;MAAKyH,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACrB1H,OAAA;QAAKyH,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACjC1H,OAAA;UACA+H,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,WAAW;UACdC,QAAQ,EAAElG,gBAAiB;UAC3B0F,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACF9H,OAAA;UAAOkI,OAAO,EAAC,WAAW;UAACT,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR9H,OAAA;UAAMyH,SAAS,EAAC,WAAW;UAAAC,QAAA,EAC1BtH,IAAI,GAAGA,IAAI,CAACoG,IAAI,GAAG;QAAkB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN9H,OAAA;QAAQmI,OAAO,EAAEhG,UAAW;QAAAuF,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACTlG,SAAS,iBACN5B,OAAA;MAAKyH,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5B1H,OAAA;QAAKyH,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC9H,OAAA;QAAA0H,QAAA,EAAIhG;MAAc;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACJ,eACL9H,OAAA;MAAKoI,GAAG,EAAE5H,WAAY;MAACiH,SAAS,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAE3DxH,aAAa,iBACVN,OAAA;MAAKyH,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1B1H,OAAA;QAAKyH,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7B1H,OAAA;UAAA0H,QAAA,EAAO;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjC9H,OAAA;UACI+H,IAAI,EAAC,QAAQ;UACbM,IAAI,EAAC,GAAG;UACR7B,IAAI,EAAC,OAAO;UACZ8B,KAAK,EAAEvC,IAAI,CAACC,KAAK,CAAC9E,SAAS,CAACE,KAAK,GAAG,IAAI,CAAE;UAC1CmH,QAAQ;UACRC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAE1C,IAAI,CAACC,KAAK,CAAC1E,QAAQ,GAAG,IAAI;QAAE;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACF9H,OAAA;UAAA0H,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B9H,OAAA;UACI+H,IAAI,EAAC,QAAQ;UACbM,IAAI,EAAC,GAAG;UACR7B,IAAI,EAAC,KAAK;UACV8B,KAAK,EAAEvC,IAAI,CAACC,KAAK,CAAC9E,SAAS,CAACG,GAAG,GAAG,IAAI,CAAE;UACxCkH,QAAQ;UACRC,GAAG,EAAC,GAAG;UACPC,GAAG,EAAE1C,IAAI,CAACC,KAAK,CAAC1E,QAAQ,GAAG,IAAI;QAAE;UAAAqG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACF9H,OAAA;UAAQmI,OAAO,EAAE1C,UAAW;UAAAiC,QAAA,EACvBhH,OAAO,GAAG,SAAS,GAAG;QAAkB;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,EAEAxH,aAAa,iBACVN,OAAA;MAAKyH,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACpC1H,OAAA;QAAKyH,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpB1H,OAAA;UAAQmI,OAAO,EAAE5B,SAAU;UAACkB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAEpD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9H,OAAA;UAAQmI,OAAO,EAAEvB,YAAa;UAACa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAEN9H,OAAA;QAAKyH,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBpH,aAAa,CAAC8E,KAAK,CAACsD,GAAG,CAAC,CAACpD,IAAI,EAAEa,KAAK,kBACjCnG,OAAA;UAEIyH,SAAS,EAAE,QACP7G,aAAa,CAAC+H,QAAQ,CAACrD,IAAI,CAAC,GAAG,UAAU,GAAG,EAAE,EAC/C;UAAAoC,QAAA,gBAEH1H,OAAA;YAAMyH,SAAS,EAAC,WAAW;YAAAC,QAAA,GACtBpC,IAAI,CAACA,IAAI,eACVtF,OAAA;cAAMyH,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,GACxB,EAACpC,IAAI,CAACC,UAAU,EAAC,OAAK,EAACD,IAAI,CAACE,QAAQ,EAAC,KACtC,EAACF,IAAI,CAACY,MAAM,iBACRlG,OAAA;gBAAMyH,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACjD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACP9H,OAAA;cACAyH,SAAS,EAAE,aAAanC,IAAI,CAACsD,EAAE,GAAG,MAAM,GAAG,MAAM,EAAG;cACpDT,OAAO,EAAEA,CAAA,KAAM1G,aAAa,CAAC6D,IAAI,CAACuD,OAAO,CAAE;cAC3CC,YAAY,EAAG9G,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAC8G,KAAK,CAACxE,KAAK,GAAG,MAAO;cACnDyE,YAAY,EAAGhH,CAAC,IAAKA,CAAC,CAACC,MAAM,CAAC8G,KAAK,CAACxE,KAAK,GAAG,EAAG;cAAAmD,QAAA,GAClD,MACO,EAACpC,IAAI,CAACsD,EAAE,GAAG,QAAQ,GAAG,QAAQ;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,EAENlH,aAAa,CAAC+H,QAAQ,CAACrD,IAAI,CAAC,iBACzBtF,OAAA;YACImI,OAAO,EAAEA,CAAA,KAAMzC,aAAa,CAACJ,IAAI,CAAE;YACnCmC,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA,GA9BI3B,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+BT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACLtG,UAAU,iBACfxB,OAAA;QAAKyH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3B1H,OAAA;UAAKyH,SAAS,EAAC,OAAO;UAAAC,QAAA,gBAClB1H,OAAA;YAAA0H,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5B9H,OAAA;YAAA0H,QAAA,EAAIlG;UAAU;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB9H,OAAA;YAAQmI,OAAO,EAAEA,CAAA,KAAM1G,aAAa,CAAC,IAAI,CAAE;YAACgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAEtE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,EACQhH,aAAa,iBACVd,OAAA;QAAKyH,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3B1H,OAAA;UAAKyH,SAAS,EAAC,OAAO;UAAAC,QAAA,gBAClB1H,OAAA;YAAA0H,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB9H,OAAA;YAAMiJ,QAAQ,EAAEtD,gBAAiB;YAAA+B,QAAA,gBAC7B1H,OAAA;cAAKyH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvB1H,OAAA;gBAAA0H,QAAA,EAAO;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACpB9H,OAAA;gBACIwG,IAAI,EAAC,MAAM;gBACX0C,YAAY,EAAElI,WAAW,CAACsE,IAAK;gBAC/B6D,QAAQ;cAAA;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eAEN9H,OAAA;cAAKyH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvB1H,OAAA;gBAAA0H,QAAA,EAAO;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC/B9H,OAAA;gBACIwG,IAAI,EAAC,OAAO;gBACZuB,IAAI,EAAC,QAAQ;gBACbM,IAAI,EAAC,OAAO;gBACZa,YAAY,EAAElI,WAAW,CAACuE,UAAU,GAAG,IAAK;gBAC5C4D,QAAQ;cAAA;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eAEN9H,OAAA;cAAKyH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACvB1H,OAAA;gBAAA0H,QAAA,EAAO;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7B9H,OAAA;gBACIwG,IAAI,EAAC,KAAK;gBACVuB,IAAI,EAAC,QAAQ;gBACbM,IAAI,EAAC,OAAO;gBACZa,YAAY,EAAElI,WAAW,CAACwE,QAAQ,GAAG,IAAK;gBAC1C2D,QAAQ;cAAA;gBAAAxB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eAEN9H,OAAA;cAAKyH,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC1B1H,OAAA;gBAAQ+H,IAAI,EAAC,QAAQ;gBAACN,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAE9C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT9H,OAAA;gBACI+H,IAAI,EAAC,QAAQ;gBACbI,OAAO,EAAEA,CAAA,KAAMpH,gBAAgB,CAAC,KAAK,CAAE;gBACvC0G,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAC5B;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC3H,EAAA,CAlXQD,GAAG;AAAAkJ,EAAA,GAAHlJ,GAAG;AAoXZ,eAAeA,GAAG;AAAC,IAAAkJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}