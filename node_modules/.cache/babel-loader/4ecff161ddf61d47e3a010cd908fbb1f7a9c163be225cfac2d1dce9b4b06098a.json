{"ast":null,"code":"var _jsxFileName = \"/Users/suriyakumar/Documents/Brain_Games/BGCScience/Fluency_test/transcription_editor/src/App.js\",\n  _s = $RefreshSig$();\nimport '@fontsource/murecho';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.esm.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://audio-transcription-editor-13c6d97d2e6b.herokuapp.com\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [transcription, setTranscription] = useState(null);\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlaying] = useState(false);\n  const [editableWords, setEditableWords] = useState([]);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [currentWord, setCurrentWord] = useState(null);\n  const [timeRange, setTimeRange] = useState({\n    start: 0,\n    end: 0\n  });\n  const [duration, setDuration] = useState(0);\n  const [showQCWord, setShowQCWord] = useState(null);\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const regionRef = useRef(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const uploadFile = async () => {\n    if (!file) {\n      alert(\"Please upload a file!\");\n      return;\n    }\n    setIsLoading(true);\n    setLoadingMessage(\"Transcribing audio...\");\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(`${API_URL}/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setTranscription(data);\n      setLoadingMessage(\"Audio transcribed successfully!\");\n      setTimeout(() => setIsLoading(false), 1000);\n      initializeWaveform(URL.createObjectURL(file));\n    } catch (error) {\n      alert(\"Error uploading file\");\n      setIsLoading(false);\n    }\n  };\n  const initializeWaveform = audioUrl => {\n    if (wavesurfer.current) {\n      wavesurfer.current.destroy();\n    }\n    wavesurfer.current = WaveSurfer.create({\n      container: waveformRef.current,\n      waveColor: \"#4a4a4a\",\n      progressColor: \"#2196F3\",\n      cursorColor: \"red\",\n      backend: \"WebAudio\",\n      height: 100,\n      plugins: [RegionsPlugin.create()],\n      interact: false\n    });\n    const wsRegions = wavesurfer.current.registerPlugin(RegionsPlugin.create());\n    wavesurfer.current.load(audioUrl);\n    wavesurfer.current.on(\"ready\", () => {\n      const duration = wavesurfer.current.getDuration();\n      setDuration(duration);\n      setTimeRange({\n        start: 0,\n        end: duration\n      });\n      const region = wsRegions.addRegion({\n        start: 0,\n        end: duration,\n        content: \"Selected Region\",\n        color: \"rgba(255, 0, 0, 0.1)\",\n        drag: true,\n        resize: true,\n        minLength: 0.1,\n        handleStyle: {\n          left: {\n            backgroundColor: \"red\",\n            width: \"8px\"\n          },\n          right: {\n            backgroundColor: \"red\",\n            width: \"8px\"\n          }\n        }\n      });\n      regionRef.current = region;\n      region.on(\"update-end\", () => {\n        setTimeRange({\n          start: region.start,\n          end: region.end\n        });\n      });\n      wsRegions.on(\"region-clicked\", (region, e) => {\n        e.stopPropagation();\n        if (playing) {\n          region.pause();\n          setPlaying(false);\n        } else {\n          region.play();\n          setPlaying(true);\n        }\n      });\n      wavesurfer.current.on(\"finish\", () => setPlaying(false));\n    });\n  };\n  useEffect(() => {\n    if (transcription) {\n      const filtered = transcription.words.filter(word => word.start_time / 1000 < timeRange.end && word.end_time / 1000 > timeRange.start);\n      setEditableWords(filtered);\n    }\n  }, [timeRange, transcription]);\n  const togglePlay = () => {\n    if (!wavesurfer.current || !regionRef.current) return;\n    if (playing) {\n      wavesurfer.current.pause();\n      setPlaying(false);\n    } else {\n      regionRef.current.play();\n      setPlaying(true);\n    }\n  };\n  const openEditModal = word => {\n    setCurrentWord(word);\n    setShowEditModal(true);\n  };\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const updatedWord = {\n      ...currentWord,\n      word: formData.get(\"word\"),\n      start_time: Math.round(parseFloat(formData.get(\"start\")) * 1000),\n      end_time: Math.round(parseFloat(formData.get(\"end\")) * 1000),\n      edited: true\n    };\n    const index = transcription.words.findIndex(w => w === currentWord);\n    let updatedWords = [...transcription.words];\n    updatedWords[index] = updatedWord;\n    setTranscription({\n      ...transcription,\n      words: updatedWords\n    });\n    setShowEditModal(false);\n  };\n  const saveEdits = async () => {\n    await fetch(`${API_URL}/update-json/${file.name}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transcription)\n    });\n    alert(\"Edits Saved!\");\n  };\n  const downloadJSON = async () => {\n    try {\n      const response = await fetch(`${API_URL}/download/${file.name}`);\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${file.name}_transcription.json`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      alert(\"Error downloading JSON\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Verbal Fluency Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\",\n            onChange: handleFileChange,\n            className: \"file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"custom-file-upload\",\n            children: \"Choose File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: file ? file.name : \"No file selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: uploadFile,\n          children: \"Upload & Transcribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loadingMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        className: \"waveform-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Region Start (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: Math.round(timeRange.start * 1000),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Region End (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: Math.round(timeRange.end * 1000),\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: togglePlay,\n            children: playing ? \"⏸ Pause\" : \"▶ Play Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toolbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondary-button\",\n            onClick: saveEdits,\n            children: \"Save All Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"secondary-button\",\n            onClick: downloadJSON,\n            children: \"Download JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-list\",\n          children: transcription.words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `word-item ${editableWords.includes(word) ? \"editable\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"word-content\",\n                children: [word.word, word.edited && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"edited-badge\",\n                  children: \"(edited)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metadata\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"timestamps\",\n                  children: [word.start_time, \"ms - \", word.end_time, \"ms\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `qc-status ${word.qc ? 'pass' : 'fail'}`,\n                  onClick: () => setShowQCWord(word.qc_word),\n                  children: word.qc ? \"✔ Correct\" : \"✗ Incorrect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 21\n            }, this), editableWords.includes(word) && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => openEditModal(word),\n              className: \"edit-button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), (showQCWord || showEditModal) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-backdrop\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-container\",\n            children: [showQCWord && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal validation-modal\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Response Validation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"validation-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error-message\",\n                  children: [\"Invalid response: \", showQCWord]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scoring-criteria\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Scoring Guidelines:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\u2705 Valid: Proper category item\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 55\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\uD83D\\uDD01 Repeat: Duplicate entry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 55\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: \"\\u274C Invalid: Off-category or error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 55\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowQCWord(null),\n                className: \"close-button\",\n                children: \"Close Validation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 39\n            }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal scoring-modal\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Score Response\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleEditSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Response Item:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"word\",\n                    defaultValue: currentWord.word,\n                    required: true,\n                    className: \"response-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timing-fields\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Start (seconds):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 55\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"start\",\n                      type: \"number\",\n                      step: \"0.001\",\n                      defaultValue: currentWord.start_time / 1000,\n                      required: true,\n                      className: \"time-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 55\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"End (seconds):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 55\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      name: \"end\",\n                      type: \"number\",\n                      step: \"0.001\",\n                      defaultValue: currentWord.end_time / 1000,\n                      required: true,\n                      className: \"time-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 55\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scoring-options\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Scoring:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"valid-button\",\n                      onClick: () => setCurrentWord({\n                        ...currentWord,\n                        qc: true\n                      }),\n                      children: \"\\u2705 Valid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 55\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      className: \"invalid-button\",\n                      onClick: () => setCurrentWord({\n                        ...currentWord,\n                        qc: false\n                      }),\n                      children: \"\\u274C Invalid\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 55\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"save-button\",\n                    children: \"\\uD83D\\uDCBE Save Score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setShowEditModal(false),\n                    className: \"cancel-button\",\n                    children: \"\\u2716 Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 51\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RHCUftKa8SOIsCqnlnM8eqxKKxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WaveSurfer","RegionsPlugin","jsxDEV","_jsxDEV","API_URL","App","_s","file","setFile","transcription","setTranscription","waveformRef","wavesurfer","playing","setPlaying","editableWords","setEditableWords","showEditModal","setShowEditModal","currentWord","setCurrentWord","timeRange","setTimeRange","start","end","duration","setDuration","showQCWord","setShowQCWord","loadingMessage","setLoadingMessage","isLoading","setIsLoading","regionRef","handleFileChange","e","target","files","uploadFile","alert","formData","FormData","append","response","fetch","method","body","data","json","setTimeout","initializeWaveform","URL","createObjectURL","error","audioUrl","current","destroy","create","container","waveColor","progressColor","cursorColor","backend","height","plugins","interact","wsRegions","registerPlugin","load","on","getDuration","region","addRegion","content","color","drag","resize","minLength","handleStyle","left","backgroundColor","width","right","stopPropagation","pause","play","filtered","words","filter","word","start_time","end_time","togglePlay","openEditModal","handleEditSubmit","preventDefault","updatedWord","get","Math","round","parseFloat","edited","index","findIndex","w","updatedWords","saveEdits","name","headers","JSON","stringify","downloadJSON","blob","url","window","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","htmlFor","onClick","ref","value","readOnly","map","includes","qc","qc_word","onSubmit","defaultValue","required","step","_c","$RefreshReg$"],"sources":["/Users/suriyakumar/Documents/Brain_Games/BGCScience/Fluency_test/transcription_editor/src/App.js"],"sourcesContent":["import '@fontsource/murecho';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.esm.js\";\nimport \"./App.css\";\n\nconst API_URL = \"https://audio-transcription-editor-13c6d97d2e6b.herokuapp.com\";\n\nfunction App() {\n    const [file, setFile] = useState(null);\n    const [transcription, setTranscription] = useState(null);\n    const waveformRef = useRef(null);\n    const wavesurfer = useRef(null);\n    const [playing, setPlaying] = useState(false);\n    const [editableWords, setEditableWords] = useState([]);\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [currentWord, setCurrentWord] = useState(null);\n    const [timeRange, setTimeRange] = useState({ start: 0, end: 0 });\n    const [duration, setDuration] = useState(0);\n    const [showQCWord, setShowQCWord] = useState(null);\n    const [loadingMessage, setLoadingMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const regionRef = useRef(null);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const uploadFile = async () => {\n        if (!file) {\n            alert(\"Please upload a file!\");\n            return;\n        }\n        setIsLoading(true);\n        setLoadingMessage(\"Transcribing audio...\");\n        \n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n\n            const response = await fetch(`${API_URL}/upload`, {\n                method: \"POST\",\n                body: formData,\n            });\n            \n            const data = await response.json();\n            setTranscription(data);\n            \n            setLoadingMessage(\"Audio transcribed successfully!\");\n            setTimeout(() => setIsLoading(false), 1000);\n            \n            initializeWaveform(URL.createObjectURL(file));\n        } catch (error) {\n            alert(\"Error uploading file\");\n            setIsLoading(false);\n        }\n    };\n\n    const initializeWaveform = (audioUrl) => {\n        if (wavesurfer.current) {\n            wavesurfer.current.destroy();\n        }\n    \n        wavesurfer.current = WaveSurfer.create({\n            container: waveformRef.current,\n            waveColor: \"#4a4a4a\",\n            progressColor: \"#2196F3\",\n            cursorColor: \"red\",\n            backend: \"WebAudio\",\n            height: 100,\n            plugins: [RegionsPlugin.create()],\n            interact: false,\n        });\n    \n        const wsRegions = wavesurfer.current.registerPlugin(RegionsPlugin.create());\n    \n        wavesurfer.current.load(audioUrl);\n    \n        wavesurfer.current.on(\"ready\", () => {\n            const duration = wavesurfer.current.getDuration();\n            setDuration(duration);\n            setTimeRange({ start: 0, end: duration });\n    \n            const region = wsRegions.addRegion({\n                start: 0,\n                end: duration,\n                content: \"Selected Region\",\n                color: \"rgba(255, 0, 0, 0.1)\",\n                drag: true,\n                resize: true,\n                minLength: 0.1,\n                handleStyle: {\n                    left: { backgroundColor: \"red\", width: \"8px\" },\n                    right: { backgroundColor: \"red\", width: \"8px\" },\n                },\n            });\n    \n            regionRef.current = region;\n    \n            region.on(\"update-end\", () => {\n                setTimeRange({\n                    start: region.start,\n                    end: region.end,\n                });\n            });\n    \n            wsRegions.on(\"region-clicked\", (region, e) => {\n                e.stopPropagation();\n                if (playing) {\n                    region.pause();\n                    setPlaying(false);\n                } else {\n                    region.play();\n                    setPlaying(true);\n                }\n            });\n    \n            wavesurfer.current.on(\"finish\", () => setPlaying(false));\n        });\n    };\n\n    useEffect(() => {\n        if (transcription) {\n            const filtered = transcription.words.filter(\n                (word) =>\n                    (word.start_time / 1000 < timeRange.end) && \n                    (word.end_time / 1000 > timeRange.start)\n            );\n            setEditableWords(filtered);\n        }\n    }, [timeRange, transcription]);\n\n    const togglePlay = () => {\n        if (!wavesurfer.current || !regionRef.current) return;\n    \n        if (playing) {\n            wavesurfer.current.pause();\n            setPlaying(false);\n        } else {\n            regionRef.current.play();\n            setPlaying(true);\n        }\n    };\n\n    const openEditModal = (word) => {\n        setCurrentWord(word);\n        setShowEditModal(true);\n    };\n\n    const handleEditSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n\n        const updatedWord = {\n            ...currentWord,\n            word: formData.get(\"word\"),\n            start_time: Math.round(parseFloat(formData.get(\"start\")) * 1000),\n            end_time: Math.round(parseFloat(formData.get(\"end\")) * 1000),\n            edited: true,\n        };\n\n        const index = transcription.words.findIndex((w) => w === currentWord);\n        let updatedWords = [...transcription.words];\n        updatedWords[index] = updatedWord;\n        setTranscription({ ...transcription, words: updatedWords });\n\n        setShowEditModal(false);\n    };\n\n    const saveEdits = async () => {\n        await fetch(`${API_URL}/update-json/${file.name}`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(transcription),\n        });\n        alert(\"Edits Saved!\");\n    };\n\n    const downloadJSON = async () => {\n        try {\n            const response = await fetch(`${API_URL}/download/${file.name}`);\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = `${file.name}_transcription.json`;\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n        } catch (error) {\n            alert(\"Error downloading JSON\");\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"top-bar\">\n                <h1 className=\"heading\">Verbal Fluency Task</h1>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"controls\">\n                <div className=\"file-input-container\">\n                  <input \n                    type=\"file\" \n                    id=\"fileInput\" \n                    onChange={handleFileChange} \n                    className=\"file-input\"\n                  />\n                  <label htmlFor=\"fileInput\" className=\"custom-file-upload\">\n                    Choose File\n                  </label>\n                  <span className=\"file-name\">\n                    {file ? file.name : \"No file selected\"}\n                  </span>\n                </div>\n                    <button className=\"primary-button\" onClick={uploadFile}>\n                        Upload & Transcribe\n                    </button>\n                </div>\n\n                {isLoading && (\n                    <div className=\"loading-overlay\">\n                        <div className=\"loading-spinner\"></div>\n                        <p>{loadingMessage}</p>\n                    </div>\n                )}\n\n                <div ref={waveformRef} className=\"waveform-container\"></div>\n\n                {transcription && (\n                    <div className=\"time-controls\">\n                        <div className=\"slider-group\">\n                            <div className=\"input-group\">\n                                <label>Region Start (ms)</label>\n                                <input\n                                    type=\"number\"\n                                    value={Math.round(timeRange.start * 1000)}\n                                    readOnly\n                                />\n                            </div>\n                            <div className=\"input-group\">\n                                <label>Region End (ms)</label>\n                                <input\n                                    type=\"number\"\n                                    value={Math.round(timeRange.end * 1000)}\n                                    readOnly\n                                />\n                            </div>\n                            <button \n                                className=\"primary-button\" \n                                onClick={togglePlay}\n                            >\n                                {playing ? \"⏸ Pause\" : \"▶ Play Selection\"}\n                            </button>\n                        </div>\n                    </div>\n                )}\n\n                {transcription && (\n                    <div className=\"transcription-container\">\n                        <div className=\"toolbar\">\n                            <button className=\"secondary-button\" onClick={saveEdits}>\n                                Save All Changes\n                            </button>\n                            <button className=\"secondary-button\" onClick={downloadJSON}>\n                                Download JSON\n                            </button>\n                        </div>\n\n                        <div className=\"words-list\">\n                {transcription.words.map((word, index) => (\n                  <div\n                    key={index}\n                    className={`word-item ${editableWords.includes(word) ? \"editable\" : \"\"}`}\n                  >\n                    <div className=\"word-text\">\n                      <div className=\"word-content\">\n                        {word.word}\n                        {word.edited && (\n                          <span className=\"edited-badge\">(edited)</span>\n                        )}\n                      </div>\n                      <div className=\"metadata\">\n                        <span className=\"timestamps\">\n                          {word.start_time}ms - {word.end_time}ms\n                        </span>\n                      <span \n                        className={`qc-status ${word.qc ? 'pass' : 'fail'}`}\n                        onClick={() => setShowQCWord(word.qc_word)}\n                      >\n                        {word.qc ? \"✔ Correct\" : \"✗ Incorrect\"}\n                      </span>\n                      </div>\n                    </div>\n                    \n                    {editableWords.includes(word) && (\n                      <button\n                        onClick={() => openEditModal(word)}\n                        className=\"edit-button\"\n                      >\n                        Edit\n                      </button>\n                    )}\n                                </div>\n                            ))}\n                        </div>\n\n                        {(showQCWord || showEditModal) && (\n                          <div className=\"modal-backdrop\">\n                              <div className=\"modal-container\">\n                                  {/* QC/Validation Modal */}\n                                  {showQCWord && (\n                                      <div className=\"modal validation-modal\">\n                                          <h3>Response Validation</h3>\n                                          <div className=\"validation-content\">\n                                              <p className=\"error-message\">Invalid response: {showQCWord}</p>\n                                              <div className=\"scoring-criteria\">\n                                                  <p><strong>Scoring Guidelines:</strong></p>\n                                                  <ul>\n                                                      <li>✅ Valid: Proper category item</li>\n                                                      <li>🔁 Repeat: Duplicate entry</li>\n                                                      <li>❌ Invalid: Off-category or error</li>\n                                                  </ul>\n                                              </div>\n                                          </div>\n                                          <button \n                                              onClick={() => setShowQCWord(null)} \n                                              className=\"close-button\"\n                                          >\n                                              Close Validation\n                                          </button>\n                                      </div>\n                                  )}\n\n                                  {/* Edit/Scoring Modal */}\n                                  {showEditModal && (\n                                      <div className=\"modal scoring-modal\">\n                                          <h3>Score Response</h3>\n                                          <form onSubmit={handleEditSubmit}>\n                                              <div className=\"form-group\">\n                                                  <label>Response Item:</label>\n                                                  <input\n                                                      name=\"word\"\n                                                      defaultValue={currentWord.word}\n                                                      required\n                                                      className=\"response-input\"\n                                                  />\n                                              </div>\n\n                                              <div className=\"timing-fields\">\n                                                  <div className=\"form-group\">\n                                                      <label>Start (seconds):</label>\n                                                      <input\n                                                          name=\"start\"\n                                                          type=\"number\"\n                                                          step=\"0.001\"\n                                                          defaultValue={currentWord.start_time / 1000}\n                                                          required\n                                                          className=\"time-input\"\n                                                      />\n                                                  </div>\n\n                                                  <div className=\"form-group\">\n                                                      <label>End (seconds):</label>\n                                                      <input\n                                                          name=\"end\"\n                                                          type=\"number\"\n                                                          step=\"0.001\"\n                                                          defaultValue={currentWord.end_time / 1000}\n                                                          required\n                                                          className=\"time-input\"\n                                                      />\n                                                  </div>\n                                              </div>\n\n                                              <div className=\"scoring-options\">\n                                                  <label>Scoring:</label>\n                                                  <div className=\"score-buttons\">\n                                                      <button \n                                                          type=\"button\" \n                                                          className=\"valid-button\"\n                                                          onClick={() => setCurrentWord({...currentWord, qc: true})}\n                                                      >\n                                                          ✅ Valid\n                                                      </button>\n                                                      <button\n                                                          type=\"button\"\n                                                          className=\"invalid-button\"\n                                                          onClick={() => setCurrentWord({...currentWord, qc: false})}\n                                                      >\n                                                          ❌ Invalid\n                                                      </button>\n                                                  </div>\n                                              </div>\n\n                                              <div className=\"modal-actions\">\n                                                  <button type=\"submit\" className=\"save-button\">\n                                                      💾 Save Score\n                                                  </button>\n                                                  <button\n                                                      type=\"button\"\n                                                      onClick={() => setShowEditModal(false)}\n                                                      className=\"cancel-button\"\n                                                  >\n                                                      ✖ Close\n                                                  </button>\n                                              </div>\n                                          </form>\n                                      </div>\n                                  )}\n                              </div>\n                          </div>\n                      )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}